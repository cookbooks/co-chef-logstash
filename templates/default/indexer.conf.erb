# Indexer Agent
#
# Receives logs from other logstash instances 
# (via AMQP) and pushes them into elasticsearch
# 
# Based on the indexer example here:
# - http://logstash.net/docs/1.1.0/tutorials/getting-started-centralized

input {
 amqp {
    type => "<%= node['logstash']['amqp']['type'] %>"
    host => "<%= node['logstash']['amqp']['host'] %>"
    exchange => "<%= node['logstash']['amqp']['exchange'] %>"
    name => "<%= node['logstash']['amqp']['name'] %>"
    user => "<%= node['logstash']['amqp']['user'] %>"
    password => "<%= node['logstash']['amqp']['password'] %>"
    vhost => "<%= node['logstash']['amqp']['vhost'] %>"
    port => "<%= node['logstash']['amqp']['port'] %>"
    <% if node['logstash']['amqp']['debug'] %>debug => "true"<% end %> 
  }
}

filter {
  grok {
    type => "syslog" # for logs of type "syslog"
    pattern => "%{SYSLOGLINE}"
  }

  grok {
    type => "apache-access" # for logs of type 'apache-access'
    pattern => "%{COMBINEDAPACHELOG}"
  }

  date {
    type => "syslog"
    timestamp => "MMM  d HH:mm:ss" # syslog 'day' value can be space-leading
    timestamp => "MMM dd HH:mm:ss"
    timestamp8601 => ISO8601 # Some syslogs use ISO8601 time format
  }

  date {
    type => "apache-access"
    timestamp => "dd/MMM/yyyy:HH:mm:ss Z"
  }
}
output {
  # This will use elasticsearch to store your logs.
  # The 'embedded' option will cause logstash to run the elasticsearch
  # server in the same process, so you don't have to worry about
  # how to download, configure, or run elasticsearch!
  elasticsearch {
<% if node['logstash']['elasticsearch']['embedded'] -%>
    embedded => true
<% else -%>
    embedded => false
    host => "<%= node['logstash']['elasticsearch']['host'] %>"
    <% if node['logstash']['elasticsearch']['cluster'] -%>cluster => "<%= node['logstash']['elasticsearch']['cluster'] %>"<% end -%>
    <% if node['logstash']['elasticsearch']['port'] -%>port => <%= node['logstash']['elasticsearch']['port'] %><% end -%>
<% end -%>
  }
}
